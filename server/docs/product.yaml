paths:
  /api/product/:
    post:
      summary: Créer un nouveau produit
      tags: [Product]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [title, category_id, price, src]
              properties:
                title:
                  type: string
                description:
                  type: string
                category_id:
                  type: string
                  description: ID MongoDB de la catégorie
                price:
                  type: number
                composition:
                  type: string
                weight_in_gr:
                  type: number
                is_promo:
                  type: boolean
                is_new:
                  type: boolean
                src:
                  type: string
      responses:
        '201':
          description: Produit créé avec succès
        '400':
          description: Données invalides ou catégorie inexistante
        '500':
          description: Erreur serveur
    get:
      summary: Récupérer tous les produits
      tags: [Product]
      parameters:
        - in: query
          name: limit
          required: false
          schema:
            type: integer
          description: Limite le nombre de produits retournés
      responses:
        '200':
          description: Liste des produits
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
        '404':
          description: Aucun produit trouvé
        '500':
          description: Erreur serveur
    patch:
      summary: Mettre à jour un produit
      tags: [Product]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [id]
              properties:
                id:
                  type: integer
                title:
                  type: string
                description:
                  type: string
                category_id:
                  type: string
                price:
                  type: number
                composition:
                  type: string
                weight_in_gr:
                  type: number
                is_promo:
                  type: boolean
                is_new:
                  type: boolean
                src:
                  type: string
      responses:
        '200':
          description: Produit mis à jour avec succès
        '400':
          description: Données invalides
        '404':
          description: Produit non trouvé
        '500':
          description: Erreur serveur

  /api/product/{id}:
    get:
      summary: Récupérer un produit par ID
      tags: [Product]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Produit trouvé
          content:
            application/json:
              schema:
                type: object
                properties:
                  product:
                    $ref: '#/components/schemas/Product'
        '404':
          description: Produit non trouvé
        '500':
          description: Erreur serveur

  /api/product/getReview:
    post:
      summary: Récupérer les avis d'un produit (POST)
      tags: [Product]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [id]
              properties:
                id:
                  type: integer
                  description: ID numérique du produit (champ auto-incrémenté)
      responses:
        '200':
          description: Avis du produit récupérés avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  reviews:
                    type: array
                    items:
                      $ref: '#/components/schemas/Review'
                  count:
                    type: integer
                  average:
                    type: number
                    format: float
        '404':
          description: Produit non trouvé
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Le produit n'a pas été trouvé"
        '500':
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Erreur lors de la récupération des avis du produit"
                  details:
                    type: string